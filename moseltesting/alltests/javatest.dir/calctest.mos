(!*******************************************************
   Mosel Testing Examples 
   ====================== 
 
   file calctest.mos 
   `````````````````
   Simple demo example calculating all squares of integers up to NUM.
 
   author: S.Heipcke, Nov 2022

  (c) Copyright 2022 Fair Isaac Corporation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

 *******************************************************!) 
model "data IO"
 options keepassert
 parameters
   NUM=10
   SOLFILE=""
 end-parameters

 declarations
   public Res: array(range) of real
 end-declarations

! Make sure the input value lies within some expected range
 assert(NUM>1 and NUM<10000, "NUM not in 2..9999")

 i:=1; newval:=real(1)
 while (newval<NUM) do 
   Res(i):=newval
   i+=1
   newval:=i^2
 end-do

 initializations to SOLFILE
   Res
 end-initializations

 writeln("Numbers generated: ", Res.size)
end-model
