(!******************************************************
  file myxprsmodel2s.mos
  ``````````````````````
  Testing myxprs:
  * Defining and integer solution callback (via subroutine name)
    
  author: S.Heipcke, Oct. 2017

  (c) Copyright 2018 Fair Isaac Corporation
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*******************************************************!)
model "Integer solution callback"
  uses "myxprs"                   ! Load the solver module
  uses "mmsystem"
  options keepassert

  public declarations
    x,y: mpvar                    ! Some decision variables
    foutput: text 
  end-declarations
 
  fopen("tee:text:foutput&", F_OUTPUT)

 ! **** Definition of the callback subroutine ****
  public procedure intsol
    writeln("!!! New solution !!!")
    writeln("x=", getsol(x), ";y=", getsol(y),
      ";obj=", getparam("myxp_lpobjval"))
  end-procedure

 ! **** Problem statement ****
  Ctr1:= 3*x + 2*y <= 400  
  Ctr2:= x + 3*y <= 310
  MyObj:= 5*x + 20*y
  x is_integer; y is_integer

 ! Define a solver callback (invoked whenever an integer solution is found)
  setcbintsol("intsol")

 ! Solve the MIP problem
  maximize(MyObj)
  if getprobstat = MYXP_OPT then
    writeln("Solution: ", getobjval, ";", x.sol, ";", y.sol)    
  else
    writeln("No solution found")
  end-if

  fclose(F_OUTPUT)
  assert(findtext(foutput,"!!! New solution",1)>0, "Callback not invoked")
end-model

