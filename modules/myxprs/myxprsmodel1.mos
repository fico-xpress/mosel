(!******************************************************
  file myxprsmodel1.mos
  `````````````````````
  Testing myxprs:
  * Problem solving and solution retrieval
    
  author: S.Heipcke, Oct. 2017, rev. Nov. 2022

  (c) Copyright 2018 Fair Isaac Corporation
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*******************************************************!)
model "Problem solving and solution retrieval"
  uses "myxprs"                       ! Load the solver module
  options keepassert
  version 0.2.0

  declarations
    x,y: mpvar                        ! Some decision variables
  end-declarations

  Ctr1:= 3*x + 2*y <= 400  
  Ctr2:= x + 3*y <= 310   
  MyObj:= 5*x + 20*y

 ! Setting solver parameters
  setparam("myxp_verbose", true)      ! Display solver log
  setparam("myxp_timelimit", 10)      ! Set a time limit
  assert(getparam("myxp_timelimit")= 10, "Incorrect control parameter value")

 ! Solve the problem (includes matrix generation) 
  maximize(MyObj)

 ! Retrieve a solver parameter
  writeln("Solver status: ", getparam("myxp_lpstatus"))
  assert(getparam("myxp_lpstatus")=MYXP_LP_OPTIMAL, "Wrong LP status")
  assert(getprobstat=MYXP_OPT, "LP not optimal")
 ! Access solution information
  if getprobstat = MYXP_OPT then
    writeln("Solution: ", getobjval, ";", x.sol, ";", y.sol) 
    assert(round(getobjval)=2067)
  else
    writeln("No solution found")
  end-if

 ! Turn poblem into a MIP
  x is_integer; y is_integer

 ! Solve the modified problem
  maximize(MyObj)
  assert(getprobstat=MYXP_OPT, "MIP not optimal")
  if getprobstat = MYXP_OPT then
    writeln("Solution: ", getobjval, ";", x.sol, ";", y.sol)    
    assert(round(getobjval)=2065)
  else
    writeln("No solution found")
  end-if

end-model

